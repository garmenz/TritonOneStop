{"ast":null,"code":"var _jsxFileName = \"/Users/jhuynh/Documents/tos/src/routes/Events.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport TOSNavBarBar from \"../components/NavBar/TOSNavBar\";\nimport OneEvent from \"../components/OneEvent/OneEvent\";\nimport '../App.css';\nimport WebsiteBKGND from '../resources/WebsiteBKGND.png';\nimport db from '../database/rt-base';\nimport EventCard from '../components/EventCard';\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    let array = [];\n    let currentComponent = this;\n    db.collection(\"events\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        array.push({\n          title: doc.data().title,\n          location: doc.data().location,\n          month: doc.data().month,\n          date: doc.data().date,\n          time: doc.data().time,\n          imgurl: doc.data().imgurl,\n          id: doc.id\n        });\n      });\n      currentComponent.setState({\n        array: array\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting docs: \", error);\n    });\n  }\n\n  render() {\n    let displayTiles = this.state.array;\n    const classes = makeStyles(theme => createStyles({\n      root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center'\n      },\n      gridList: {\n        width: 500,\n        height: 450,\n        transform: 'translateZ(0)'\n      },\n      icon: {\n        lor: 'rgba(255, 255, 255, 0.54)'\n      }\n    }));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TOSNavBarBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-eventLayout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      style: {\n        marginLeft: 50,\n        marginRight: 'auto'\n      },\n      cellHeight: 180,\n      className: classes.gridList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: \"Subheader\",\n      cols: 3,\n      style: {\n        height: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(ListSubheader, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Resources\")), displayTiles.map((title, i) => {\n      return React.createElement(EventCard, {\n        key: i,\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/Users/jhuynh/Documents/tos/src/routes/Events.js"],"names":["React","Component","Redirect","TOSNavBarBar","OneEvent","WebsiteBKGND","db","EventCard","Events","constructor","props","state","array","componentDidMount","bind","currentComponent","collection","get","then","querySnapshot","forEach","doc","push","title","data","location","month","date","time","imgurl","id","setState","catch","error","console","log","render","displayTiles","classes","makeStyles","theme","createStyles","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","alignItems","gridList","width","height","transform","icon","lor","marginLeft","marginRight","map","i"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport TOSNavBarBar from \"../components/NavBar/TOSNavBar\";\r\nimport OneEvent from \"../components/OneEvent/OneEvent\";\r\nimport '../App.css';\r\nimport WebsiteBKGND from '../resources/WebsiteBKGND.png';\r\nimport db from '../database/rt-base'\r\nimport EventCard from '../components/EventCard'\r\n\r\nclass Events extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            array : []\r\n        };\r\n\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let array = [];\r\n        let currentComponent = this;\r\n        db.collection(\"events\").get().then(function(querySnapshot){\r\n            querySnapshot.forEach(function(doc) {\r\n                array.push({\r\n                    title: doc.data().title,\r\n                    location: doc.data().location,\r\n                    month: doc.data().month,\r\n                    date: doc.data().date,\r\n                    time: doc.data().time,\r\n                    imgurl: doc.data().imgurl,\r\n                    id: doc.id\r\n                });\r\n            });\r\n            currentComponent.setState({array: array});\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error getting docs: \", error);\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        let displayTiles = this.state.array;\r\n        const classes = makeStyles((theme: Theme) =>\r\n            createStyles({\r\n                root: {\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    justifyContent: 'space-around',\r\n                    overflow: 'hidden',\r\n                    backgroundColor: theme.palette.background.paper,\r\n                    alignItems: 'center',\r\n                },\r\n                gridList: {\r\n                    width: 500,\r\n                    height: 450,\r\n                    transform: 'translateZ(0)',\r\n                },\r\n                icon: {\r\n                    lor: 'rgba(255, 255, 255, 0.54)',\r\n                },\r\n            }),\r\n        );\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <TOSNavBarBar/>\r\n                <div className=\"App-eventLayout\">\r\n                    <GridList style={{ marginLeft: 50, marginRight: 'auto' }} cellHeight={180} className={classes.gridList}>\r\n                        <GridListTile key=\"Subheader\" cols={3} style={{ height: 'auto', }}>\r\n                            <ListSubheader component=\"div\">Resources</ListSubheader>\r\n                        </GridListTile>\r\n                        {displayTiles.map((title, i) => {\r\n                            return <EventCard key={i} title={title} />\r\n                        })}\r\n                    </GridList>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Events;"]},"metadata":{},"sourceType":"module"}