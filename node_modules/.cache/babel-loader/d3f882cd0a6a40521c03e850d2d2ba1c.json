{"ast":null,"code":"var _jsxFileName = \"/Users/jhuynh/Documents/tos/src/components/NavBar/TOSNavBar.js\";\nimport React from 'react';\nimport './TOSNavBar.css';\nimport TOSLogo from '../../resources/NavBarLogo.png'; //import {Route, withRouter, Redirect} from 'react-router-dom';\n\nimport { withRouter } from 'react-router-dom';\nimport db_login from \"../../database/base\";\n\nclass TOSNavBar extends React.Component {\n  /*\n      Important data fields:\n      ├── this.state:\n      |   ├── isLoggedIn: Used to determine UI rendering,\n      |   |               initialized according to local storage when starting, will be updated when login and logout.\n      |   ├── userName:   Used to pass userName from input to signup and login\n      |   └── userPW:     Used to pass PW from input to signup and login\n      |\n      ├── localStorage:   Stores userName locally in case user refreshes the page, will only be updated when login and\n      |                   logout.\n      └── db_login.auth(): Firebase authentication status, comes with a bit of delay, careful when using it\n   */\n  constructor(props) {\n    super(props);\n\n    this.handleUsernameChange = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.handlePWChange = event => {\n      this.setState({\n        userPW: event.target.value\n      });\n    };\n\n    this.handleClickResource = () => {\n      this.props.history.push(\"/resource\");\n    };\n\n    this.handleClickEvent = () => {\n      this.props.history.push(\"/event\");\n    };\n\n    this.handleClickMain = () => {\n      this.props.history.push(\"/\");\n    };\n\n    this.handleClickCoursePlanner = () => {\n      this.props.history.push(\"/courseplanner\");\n    };\n\n    this.handleClickResource = this.handleClickResource.bind(this);\n    this.handleClickEvent = this.handleClickEvent.bind(this);\n    this.handleClickMain = this.handleClickMain.bind(this);\n    this.handleClickCoursePlanner = this.handleClickCoursePlanner.bind(this);\n    this.handleLogIn = this.handleLogIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleLogOut = this.handleLogOut.bind(this);\n    this.handleLogInError = this.handleLogInError.bind(this);\n    console.log(\"Current User at construct:\");\n    console.log(db_login.auth().currentUser);\n\n    if (localStorage.getItem(\"UserName\") === \"null\") {\n      this.state = {\n        isLoggedIn: false,\n        userName: null,\n        userPW: null\n      };\n    } else {\n      this.state = {\n        isLoggedIn: true,\n        userName: localStorage.getItem(\"UserName\"),\n        userPW: \"\"\n      };\n    }\n  }\n\n  handleLogInError(error) {\n    alert(error);\n    this.setState({\n      isLoggedIn: false\n    });\n    console.log(\"NavBar: Log-In: Fake TRUE, FALSE\");\n    localStorage.setItem(\"UserName\", null);\n  }\n\n  handleLogIn() {\n    console.log(\"HandleLogIn: ATTEMPT\");\n    console.log(\"Handle LogIn: Before Log In:\", \"\\nUser ID: \", db_login.auth().currentUser == null ? \"null\" : db_login.auth().currentUser.uid, \"\\nLocalStorage: \", localStorage.getItem(\"UserName\")); // Actual login\n\n    try {\n      console.log(\"NavBar: Log-In: TRUE\");\n      this.setState({\n        isLoggedIn: true\n      });\n      db_login.auth().signInWithEmailAndPassword(this.state.userName, this.state.userPW).catch(this.handleLogInError);\n      localStorage.setItem(\"UserName\", this.state.userName);\n    } catch (error) {\n      alert(error);\n      console.log(\"NavBar: Log-In: FALSE\");\n    }\n\n    console.log(\"Handle LogIn: After Log In:\", \"\\nUser ID: \", db_login.auth().currentUser == null ? \"null\" : db_login.auth().currentUser.uid, \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n  }\n\n  handleSignUp() {\n    console.log(\"handleSignUp: ATTEMPT\");\n    console.log(\"Handle SignUp: Before SignUp:\", \"\\nUser ID: \", db_login.auth().currentUser == null ? \"null\" : db_login.auth().currentUser.uid, \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n\n    try {\n      db_login.auth().createUserWithEmailAndPassword(this.state.userName, this.state.userPW);\n      console.log(\"NavBar: SignUp\");\n      alert(\"Signed Up with email\" + this.state.userName);\n    } catch (error) {\n      alert(error);\n      console.log(\"Failed to SignUp\");\n    }\n\n    console.log(\"Handle SignUp: After SignUp:\", \"\\nUser ID: \", db_login.auth().currentUser == null ? \"null\" : db_login.auth().currentUser.uid, \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n  }\n\n  handleLogOut() {\n    console.log(\"HandleLogOut: ATTEMPT\");\n    console.log(\"Handle LogOut: Before Logout:\", \"\\nUser ID: \", db_login.auth().currentUser == null ? \"null\" : db_login.auth().currentUser.uid, \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n    console.log(\"NavBar: Log-In: FALSE\");\n    db_login.auth().signOut();\n    localStorage.setItem(\"UserName\", null);\n    this.setState({\n      isLoggedIn: false\n    });\n    console.log(\"Handle LogOut: After Logout:\", \"\\nUser ID: \", db_login.auth().currentUser == null ? \"null\" : db_login.auth().currentUser.uid, \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n  }\n\n  render() {\n    if (!this.state.isLoggedIn) {\n      return React.createElement(\"div\", {\n        className: \"NavBarBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"NavBarLogo\",\n        alt: \"TOSLogo\",\n        src: TOSLogo,\n        onClick: this.handleClickMain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"NavBarMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(TOSNavBarMenuButton, {\n        onPress: this.handleClickResource,\n        buttonText: \"Resource\",\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(TOSNavBarMenuButton, {\n        onPress: this.handleClickEvent,\n        buttonText: \"Event\",\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(TOSNavBarMenuButton, {\n        onPress: this.handleClickCoursePlanner,\n        buttonText: \"CoursePlanner\",\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logger-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"loggerTxt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        className: \"logger-input\",\n        placeholder: \"Name\",\n        onChange: this.handleUsernameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"logger-button\",\n        onClick: this.handleLogIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Login\")), React.createElement(\"div\", {\n        className: \"logger-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"loggerTxt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        className: \"logger-input\",\n        placeholder: \"PW\",\n        onChange: this.handlePWChange,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"logger-button\",\n        onClick: this.handleSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"SignUp\"))), React.createElement(\"div\", {\n        className: \"search-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TOSNavBarSearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"NavBarBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"NavBarLogo\",\n        alt: \"TOSLogo\",\n        src: TOSLogo,\n        onClick: this.handleClickMain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"NavBarMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(TOSNavBarMenuButton, {\n        onPress: this.handleClickResource,\n        buttonText: \"Resource\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(TOSNavBarMenuButton, {\n        onPress: this.handleClickEvent,\n        buttonText: \"Event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(TOSNavBarMenuButton, {\n        onPress: this.handleClickCoursePlanner,\n        buttonText: \"CoursePlanner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logged-in-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"loggerTxt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Logged In As: \", this.state.userName), React.createElement(\"button\", {\n        className: \"logger-button\",\n        onClick: this.handleLogOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Log Out\"))), React.createElement(\"div\", {\n        className: \"search-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(TOSNavBarSearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nclass TOSNavBarSearchBar extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"   Search.....\",\n      className: \"search-input-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"search-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass TOSNavBarMenuButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.buttonText = this.props.buttonText;\n    this.state = {\n      buttonText: this.props.buttonText\n    };\n  }\n\n  render() {\n    const onPress = this.props.onPress;\n    return React.createElement(\"div\", {\n      className: \"NavBarMenuButtonContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"NavBarMenuButton\",\n      onClick: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.buttonText));\n  }\n\n}\n\nexport default withRouter(TOSNavBar);","map":{"version":3,"sources":["/Users/jhuynh/Documents/tos/src/components/NavBar/TOSNavBar.js"],"names":["React","TOSLogo","withRouter","db_login","TOSNavBar","Component","constructor","props","handleUsernameChange","event","setState","userName","target","value","handlePWChange","userPW","handleClickResource","history","push","handleClickEvent","handleClickMain","handleClickCoursePlanner","bind","handleLogIn","handleSignUp","handleLogOut","handleLogInError","console","log","auth","currentUser","localStorage","getItem","state","isLoggedIn","error","alert","setItem","uid","signInWithEmailAndPassword","catch","createUserWithEmailAndPassword","signOut","render","TOSNavBarSearchBar","TOSNavBarMenuButton","buttonText","onPress"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TOSNavBar.css';\nimport TOSLogo from '../../resources/NavBarLogo.png';\n//import {Route, withRouter, Redirect} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport db_login from \"../../database/base\";\n\n\nclass TOSNavBar extends React.Component {\n    /*\n        Important data fields:\n        ├── this.state:\n        |   ├── isLoggedIn: Used to determine UI rendering,\n        |   |               initialized according to local storage when starting, will be updated when login and logout.\n        |   ├── userName:   Used to pass userName from input to signup and login\n        |   └── userPW:     Used to pass PW from input to signup and login\n        |\n        ├── localStorage:   Stores userName locally in case user refreshes the page, will only be updated when login and\n        |                   logout.\n        └── db_login.auth(): Firebase authentication status, comes with a bit of delay, careful when using it\n     */\n\n    constructor(props) {\n        super(props);\n        this.handleClickResource = this.handleClickResource.bind(this);\n        this.handleClickEvent = this.handleClickEvent.bind(this);\n        this.handleClickMain = this.handleClickMain.bind(this);\n        this.handleClickCoursePlanner = this.handleClickCoursePlanner.bind(this);\n        this.handleLogIn = this.handleLogIn.bind(this);\n        this.handleSignUp = this.handleSignUp.bind(this);\n        this.handleLogOut = this.handleLogOut.bind(this);\n        this.handleLogInError = this.handleLogInError.bind(this);\n        console.log(\"Current User at construct:\");\n        console.log(db_login.auth().currentUser);\n        if(localStorage.getItem(\"UserName\")===\"null\") {\n            this.state={isLoggedIn: false, userName: null, userPW: null};\n        }\n        else {\n            this.state={isLoggedIn: true, userName: localStorage.getItem(\"UserName\"), userPW: \"\"};\n        }\n    }\n\n    handleLogInError(error) {\n        alert(error);\n        this.setState({isLoggedIn: false});\n        console.log(\"NavBar: Log-In: Fake TRUE, FALSE\");\n        localStorage.setItem(\"UserName\", null);\n    }\n\n    handleLogIn(){\n        console.log(\"HandleLogIn: ATTEMPT\");\n        console.log(\"Handle LogIn: Before Log In:\",\n            \"\\nUser ID: \", (db_login.auth().currentUser==null) ? \"null\" : db_login.auth().currentUser.uid,\n            \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n\n        // Actual login\n        try{\n            console.log(\"NavBar: Log-In: TRUE\");\n            this.setState({isLoggedIn: true});\n            db_login.auth().signInWithEmailAndPassword(this.state.userName, this.state.userPW).catch(this.handleLogInError);\n            localStorage.setItem(\"UserName\", this.state.userName);\n        } catch (error) {\n            alert(error);\n            console.log(\"NavBar: Log-In: FALSE\");\n        }\n\n        console.log(\"Handle LogIn: After Log In:\",\n            \"\\nUser ID: \", (db_login.auth().currentUser==null) ? \"null\" : db_login.auth().currentUser.uid,\n            \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n    }\n\n    handleSignUp(){\n        console.log(\"handleSignUp: ATTEMPT\");\n        console.log(\"Handle SignUp: Before SignUp:\",\n            \"\\nUser ID: \", (db_login.auth().currentUser==null) ? \"null\" : db_login.auth().currentUser.uid,\n            \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n\n        try{\n            db_login.auth().createUserWithEmailAndPassword(this.state.userName, this.state.userPW);\n            console.log(\"NavBar: SignUp\");\n            alert(\"Signed Up with email\" + this.state.userName)\n        } catch (error) {\n            alert(error);\n            console.log(\"Failed to SignUp\");\n        }\n\n        console.log(\"Handle SignUp: After SignUp:\",\n            \"\\nUser ID: \", (db_login.auth().currentUser==null) ? \"null\" : db_login.auth().currentUser.uid,\n            \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n    }\n\n    handleLogOut(){\n        console.log(\"HandleLogOut: ATTEMPT\");\n        console.log(\"Handle LogOut: Before Logout:\",\n            \"\\nUser ID: \", (db_login.auth().currentUser==null) ? \"null\" : db_login.auth().currentUser.uid,\n            \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n        console.log(\"NavBar: Log-In: FALSE\");\n\n        db_login.auth().signOut();\n        localStorage.setItem(\"UserName\", null);\n        this.setState({isLoggedIn: false});\n\n        console.log(\"Handle LogOut: After Logout:\",\n            \"\\nUser ID: \", (db_login.auth().currentUser==null) ? \"null\" : db_login.auth().currentUser.uid,\n            \"\\nLocalStorage: \", localStorage.getItem(\"UserName\"));\n    }\n\n    handleUsernameChange = (event) => {\n        this.setState({userName: event.target.value});\n    };\n\n    handlePWChange = (event) => {\n        this.setState({userPW: event.target.value});\n    };\n\n    handleClickResource = () => {\n        this.props.history.push(\"/resource\");\n    };\n\n    handleClickEvent = () => {\n        this.props.history.push(\"/event\");\n    };\n\n    handleClickMain = () => {\n        this.props.history.push(\"/\");\n    };\n\n    handleClickCoursePlanner = () => {\n        this.props.history.push(\"/courseplanner\");\n    };\n\n    render() {\n        if(!this.state.isLoggedIn) {\n            return (\n                <div className=\"NavBarBody\">\n                    <img className=\"NavBarLogo\" alt=\"TOSLogo\" src={TOSLogo} onClick={this.handleClickMain}/>\n                    <div className=\"NavBarMenu\">\n                        <div className=\"button-container\">\n                            <TOSNavBarMenuButton onPress={this.handleClickResource} buttonText=\"Resource\" width=\"200px\"/>\n                            <TOSNavBarMenuButton onPress={this.handleClickEvent} buttonText=\"Event\" width=\"200px\"/>\n                            <TOSNavBarMenuButton onPress={this.handleClickCoursePlanner} buttonText=\"CoursePlanner\" width=\"200px\"/>\n                        </div>\n                        <div>\n                            <div className=\"logger-container\">\n                                <p className=\"loggerTxt\">Email:</p>\n                                <input className=\"logger-input\" placeholder=\"Name\" onChange={this.handleUsernameChange}/>\n                                <button className=\"logger-button\" onClick={this.handleLogIn}>Login</button>\n                            </div>\n                            <div className=\"logger-container\">\n                                <p className=\"loggerTxt\">Password:</p>\n                                <input className=\"logger-input\" placeholder=\"PW\" onChange={this.handlePWChange} type=\"password\"/>\n                                <button className=\"logger-button\" onClick={this.handleSignUp}>SignUp</button>\n                            </div>\n                        </div>\n                        <div className=\"search-container\">\n                            <TOSNavBarSearchBar/>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"NavBarBody\">\n                    <img className=\"NavBarLogo\" alt=\"TOSLogo\" src={TOSLogo} onClick={this.handleClickMain}/>\n                    <div className=\"NavBarMenu\">\n                        <div className=\"button-container\">\n                            <TOSNavBarMenuButton onPress={this.handleClickResource} buttonText=\"Resource\"/>\n                            <TOSNavBarMenuButton onPress={this.handleClickEvent} buttonText=\"Event\"/>\n                            <TOSNavBarMenuButton onPress={this.handleClickCoursePlanner} buttonText=\"CoursePlanner\"/>\n                        </div>\n                        <div>\n                            <div className=\"logged-in-container\">\n                                <p className=\"loggerTxt\">Logged In As: {this.state.userName}</p>\n                                <button className=\"logger-button\" onClick={this.handleLogOut}>Log Out</button>\n                            </div>\n                        </div>\n                        <div className=\"search-container\">\n                            <TOSNavBarSearchBar/>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nclass TOSNavBarSearchBar extends React.Component {\n    render() {\n        return (\n            <div className=\"search-bar\">\n                <input placeholder=\"   Search.....\" className=\"search-input-box\"/>\n                <button className=\"search-button\"/>\n            </div>\n        );\n    };\n}\n\nclass TOSNavBarMenuButton extends React.Component {\n    constructor(props){\n        super(props);\n        this.buttonText=this.props.buttonText;\n        this.state={buttonText: this.props.buttonText};\n    }\n\n    render() {\n        const {onPress} = this.props;\n        return (\n            <div className=\"NavBarMenuButtonContainer\">\n                <button className=\"NavBarMenuButton\" onClick={onPress}>{this.buttonText}</button>\n            </div>\n        );\n    }\n}\nexport default withRouter(TOSNavBar);\n"]},"metadata":{},"sourceType":"module"}