{"ast":null,"code":"var _jsxFileName = \"/Users/jhuynh/Documents/tos/src/routes/Resource.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/TOSNavBar\";\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { tileData } from '../components/OneEvent/tileData';\nimport ResourceCard from \"../components/ResourceCard\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\nclass Resource extends Component {\n  constructor(props) {\n    super(props);\n  } // renderItemByTypes(header=\"Untitled\", content=\"None\", index) {\n  //     {tileData.map(() => (\n  //         <ResourceCard key={this.tile} tile={this.tile}/>\n  //     ))}\n  //     if(index < 3) {\n  //       return <ResourceCard key={this.tile} tile={this.tile}/>\n  //     }\n  //     else if(index <5){\n  //       return <ResourceCard key={this.tile} tile={this.tile}/>\n  //     }\n  //     else if(index <7){\n  //       return <ResourceCard key={this.tile} tile={this.tile}/>\n  //     }\n  //     else if(index <10){\n  //         return <ResourceCard key={this.tile} tile={this.tile}/>\n  //     }\n  //     else if(index <14){\n  //         return <ResourceCard key={this.tile} tile={this.tile}/>\n  //     }\n  //     else\n  //     {\n  //         return <ResourceCard key={this.tile} tile={this.tile}/>\n  //     }\n  //   };\n\n\n  render() {\n    const classes = makeStyles(theme => createStyles({\n      root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center'\n      },\n      gridList: {\n        width: 500,\n        height: 450,\n        transform: 'translateZ(0)'\n      },\n      icon: {\n        lor: 'rgba(255, 255, 255, 0.54)'\n      }\n    })); //overide\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      freeSolo: true,\n      autoHightlight: true,\n      options: tileData.map(tile => tile.title),\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        hint: \"search\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(GridList, {\n      style: {\n        marginLeft: 50,\n        marginRight: 'auto'\n      },\n      cellHeight: 180,\n      className: classes.gridList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: \"Subheader\",\n      cols: 3,\n      style: {\n        height: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ListSubheader, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Resources\")), tileData.map(tile => React.createElement(ResourceCard, {\n      key: tile,\n      tile: tile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Resource;","map":{"version":3,"sources":["/Users/jhuynh/Documents/tos/src/routes/Resource.js"],"names":["React","Component","Redirect","NavBar","Theme","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","tileData","ResourceCard","Autocomplete","TextField","Resource","constructor","props","render","classes","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","alignItems","gridList","width","height","transform","icon","lor","map","tile","title","params","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/TOSNavBar\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {tileData} from '../components/OneEvent/tileData';\nimport ResourceCard from \"../components/ResourceCard\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass Resource extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    // renderItemByTypes(header=\"Untitled\", content=\"None\", index) {\n    //     {tileData.map(() => (\n    //         <ResourceCard key={this.tile} tile={this.tile}/>\n    //     ))}\n\n    //     if(index < 3) {\n    //       return <ResourceCard key={this.tile} tile={this.tile}/>\n    //     }\n    //     else if(index <5){\n    //       return <ResourceCard key={this.tile} tile={this.tile}/>\n    //     }\n    //     else if(index <7){\n    //       return <ResourceCard key={this.tile} tile={this.tile}/>\n    //     }\n    //     else if(index <10){\n    //         return <ResourceCard key={this.tile} tile={this.tile}/>\n    //     }\n    //     else if(index <14){\n    //         return <ResourceCard key={this.tile} tile={this.tile}/>\n    //     }\n    //     else\n    //     {\n    //         return <ResourceCard key={this.tile} tile={this.tile}/>\n    //     }\n    //   };\n\n    render() {\n        const classes = makeStyles((theme: Theme) =>\n            createStyles({\n                root: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-around',\n                    overflow: 'hidden',\n                    backgroundColor: theme.palette.background.paper,\n                    alignItems: 'center',\n                },\n                gridList: {\n                    width: 500,\n                    height: 450,\n                    transform: 'translateZ(0)',\n                },\n                icon: {\n                    lor: 'rgba(255, 255, 255, 0.54)',\n                },\n            }),\n        );\n\n        \n        \n        //overide\n        return (\n            <div>\n                <NavBar/>\n            <div className={classes.root}>  \n\n            <Autocomplete\n        freeSolo\n        autoHightlight\n        options={tileData.map(tile => tile.title)}\n        renderInput={params => (\n          <TextField {...params} hint=\"search\" margin=\"normal\" variant=\"outlined\" fullWidth />\n        )}/>\n                \n            <GridList style={{marginLeft: 50,marginRight: 'auto'}}cellHeight={180} className={classes.gridList}>\n                    <GridListTile key=\"Subheader\" cols={3} style={{ height: 'auto', }}>\n                        <ListSubheader component=\"div\">Resources</ListSubheader>\n                    </GridListTile>\n                    {tileData.map(tile => (\n                        <ResourceCard key={tile} tile={tile}/>\n                    ))}\n                    {/* {tileData.map((tile, index) => this.renderItemByTypes(tile.title, tile.content, index))} */}\n                </GridList>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Resource;"]},"metadata":{},"sourceType":"module"}